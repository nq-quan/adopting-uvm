diff --git a/verif/alutb/alutb.flist b/verif/alutb/alutb.flist
index 59fb1e8..824cbc2 100755
--- a/verif/alutb/alutb.flist
+++ b/verif/alutb/alutb.flist
@@ -8,5 +8,6 @@
 ../../verif/alutb/alu_wrapper.sv
 ../../verif/alutb/tests/basic.sv
 ../../verif/alutb/tests/base_test.sv
+../../verif/alutb/tests/fast_clk.sv
 -f ../../verif/alutb/rtl.flist
 
diff --git a/verif/alutb/alutb_tb_top.sv b/verif/alutb/alutb_tb_top.sv
index a9a5bfb..526b688 100755
--- a/verif/alutb/alutb_tb_top.sv
+++ b/verif/alutb/alutb_tb_top.sv
@@ -37,8 +37,7 @@ module alutb_tb_top;
    // Group: DUT
 
    // obj: dut_wrapper
-   alu_wrapper alu_wrapper(/*AUTOINST*/
-                           // Interfaces
+   alu_wrapper alu_wrapper(// Interfaces
                            .ctx_i               (ctx_i),
                            // Inputs
                            .tb_clk              (tb_clk),
@@ -51,10 +50,10 @@ module alutb_tb_top;
    // func: pre_run_test
    // Set interface names before run_test is called
    function void pre_run_test();
-      `cn_set_intf(virtual cn_clk_intf    , "cn_pkg::clk_intf"  , "tb_clk_vi", tb_clk_i);
-      `cn_set_intf(virtual cn_rst_intf    , "cn_pkg::rst_intf"  , "tb_rst_vi", tb_rst_i);
-      `cn_set_intf(virtual ctx_intf.drv_mp, "ctx_pkg::ctx_intf" , "ctx_vi"   , ctx_i.drv_mp);
-      `cn_set_intf(virtual ctx_intf.mon_mp, "ctx_pkg::ctx_intf" , "ctx_vi"   , ctx_i.mon_mp);
+      `cn_set_intf(virtual cn_clk_intf    , "cn_pkg::clk_intf"  , "tb_clk_vi", tb_clk_i)
+      `cn_set_intf(virtual cn_rst_intf    , "cn_pkg::rst_intf"  , "tb_rst_vi", tb_rst_i)
+      `cn_set_intf(virtual ctx_intf.drv_mp, "ctx_pkg::ctx_intf" , "ctx_vi"   , ctx_i.drv_mp)
+      `cn_set_intf(virtual ctx_intf.mon_mp, "ctx_pkg::ctx_intf" , "ctx_vi"   , ctx_i.mon_mp)
    endfunction : pre_run_test
 
    `include "tb_common.v"
diff --git a/verif/alutb/tests/fast_clk.sv b/verif/alutb/tests/fast_clk.sv
new file mode 100644
index 0000000..d226acd
--- /dev/null
+++ b/verif/alutb/tests/fast_clk.sv
@@ -0,0 +1,69 @@
+
+// **********************************************************************
+// *
+// * legal mumbo jumbo
+// *
+// * (c) 2013
+// * (utg v1.0)
+// ***********************************************************************
+// File:   fast_clk.sv
+// Author: bhunter
+/* About:  <description>
+ *************************************************************************/
+
+`ifndef __FAST_CLK_SV__
+   `define __FAST_CLK_SV__
+
+   `include "basic.sv"
+// (`includes go here)
+
+// class: fast_clk_test_c
+// (Describe me)
+class fast_clk_test_c extends base_test_c;
+   `uvm_component_utils_begin(fast_clk_test_c)
+   `uvm_component_utils_end
+
+   //----------------------------------------------------------------------------------------
+   // Group: Configuration Fields
+
+   //----------------------------------------------------------------------------------------
+   // Group: Fields
+
+   //----------------------------------------------------------------------------------------
+   // Group: Methods
+   function new(string name="fast_clk",
+                uvm_component parent=null);
+      super.new(name, parent);
+   endfunction : new
+
+   ////////////////////////////////////////////
+   // func: build_phase
+   virtual function void build_phase(uvm_phase phase);
+      super.build_phase(phase);
+   endfunction : build_phase
+
+   ////////////////////////////////////////////
+   // func: connect_phase
+   virtual function void connect_phase(uvm_phase phase);
+      super.connect_phase(phase);
+   endfunction : connect_phase
+
+   ////////////////////////////////////////////
+   // func: end_of_elaboration_phase
+   virtual function void end_of_elaboration_phase(uvm_phase phase);
+      super.end_of_elaboration_phase(phase);
+      tb_clk_drv.randomize(period_ps) with {
+         period_ps inside {[1800:1999]};
+      };
+      `cn_info(("Selected a period of %0dps", tb_clk_drv.period_ps))
+   endfunction : end_of_elaboration_phase
+
+   ////////////////////////////////////////////
+   // func: run_phase
+   virtual task run_phase(uvm_phase phase);
+      super.run_phase(phase);
+   endtask : run_phase
+
+endclass : fast_clk_test_c
+
+`endif // __FAST_CLK_SV__
